function song = MusicForPrague(octave, speed, rate)
% Music for Prague 1968 (excerpt) -- Karel Husa
%   Inputs: octave -- integer value to go up or down an octave. 
%                     0 is default; >0 is higher; <0 is lower
%           speed -- integer speed value (default is 1 s per bar in 4/4)
%                    0 is default; >0 is faster; <0 is slower
%           rate -- sample rate for music playback (usually 8192 or 32768)
%   Output: song -- vector for mono or matrix for stereo

% Define anonymous function that creates note for duration t and frequency
% freq and at the defined rate
note = @(t,freq,oct) sin(linspace(0,2*pi*t*freq*2^oct,round(t*rate)));

% Define notes w.r.t. A0 = 27.5 Hz. Octave lets user change octave.
C0 = 13.75*2^(3/12);
C  = C0*2^octave;       % C
Cs = C*2^(1/12); Db=Cs; % C# or Db
D  = C*2^(2/12);        % D
Ds = C*2^(3/12); Eb=Ds; % D# or Eb
E  = C*2^(4/12);        % E
F  = C*2^(5/12);        % F
Fs = C*2^(6/12); Gb=Fs; % F# or Gb
G  = C*2^(7/12);        % G
Gs = C*2^(8/12); Ab=Gs; % G# or Ab
A  = C*2^(9/12);        % A
As = C*2^(10/12); Bb=As;% A# or Bb
B  = C*2^(11/12);       % B
r  = 0;                 % rest

% Assume time signature of 4/4
barLength = 1/2^speed*4; % slow down with x4 factor

w = barLength;     %whole note
h = barLength/2;   %half note
t = barLength/3;   %thirds
q = barLength/4;   %quarter note
tt= barLength/6;   %triplet
e = barLength/8;   %eighth note
et= barLength/12;  %"eighth" triplet
s = barLength/16;  %sixteenth note
ss = barLength/32;  %32nd note

cresc=linspace(1,3,(q+h)*rate); % 2 bars

% Creates two-part harmony
song=[
    1/3*(note(e,D,2) + note(e,D,3) + note(e,D,4) + note(e,D,5) + note(e,D,6))/5 ...
    1/3*(note(e,D,2) + note(e,D,3) + note(e,D,4) + note(e,D,5) + note(e,D,6))/5 ...
    1/3*(note(q,D,2) + note(q,D,3) + note(q,D,4) + note(q,D,5) + note(q,D,6))/5 ...
    1/3*(note(q,D,2) + note(q,D,3) + note(q,D,4) + note(q,D,5) + note(q,D,6))/5 ...
    1/3*(note(e,E,2) + note(e,E,3) + note(e,E,4) + note(e,E,5) + note(e,E,6))/5 ...
    1/3*(note(e,C,2) + note(e,C,3) + note(e,C,4) + note(e,C,5) + note(e,C,6))/5 ...
    1/3*(note(q,C,2) + note(q,C,3) + note(q,C,4) + note(q,C,5) + note(q,C,6))/5 ...
    1/3*(note(q+e,E,2) + note(q+e,E,3) + note(q+e,E,4) + note(q+e,E,5) + note(q+e,E,6))/5 ...
    1/3*note(e,r,0) ...
    1/3*(note(e,E,2) + note(e,E,3) + note(e,E,4) + note(e,E,5) + note(e,E,6))/5 ...
    1/3*(note(e,C,2) + note(e,C,3) + note(e,C,4) + note(e,C,5) + note(e,C,6))/5 ...
    1/3*(note(h,C,2) + note(h,C,3) + note(h,C,4) + note(h,C,5) + note(h,C,6))/5 ...
    1/3*(note(h+e,E,2) + note(h+e,E,3) + note(h+e,E,4) + note(h+e,E,5) + note(h+e,E,6))/5 ...
    1/3*note(e,r,0) ...
    1/3*(note(e,C,2) + note(e,C,3) + note(e,C,4) + note(e,C,5) + note(e,C,6))/5 ...
    1/3*note(e,r,0) ...
    1/3*cresc.*(note(q+h,E,2) + note(q+h,E,3) + note(q+h,E,4) + note(q+h,E,5) + note(q+h,E,6))/5 ...
    
    note(5*q,r,0)   ...
    note(s,C,2)   ...
    note(ss,C,2)   ...
    note(ss,C,2)   ...
    note(s,C,2)   ...
    note(s,C,2)   ...
    note(ss,C,2)   ...
    note(ss,C,2)   ...
    note(ss,C,2)   ...
    note(ss,C,2)   ...
    note(e,C,2)   ...
    note(w,r,0) ...
    note(ss,C,2)   ...
    note(ss,C,2)   ...
    note(ss,C,2)   ...
    note(ss,C,2)   ...
    note(e,C,2)   ...
    note(w+q,r,0)
    ];

% Combine two channels into one. Comment out this line for stereo sound
song = sum(song)/2;